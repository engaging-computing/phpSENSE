// Generated by CoffeeScript 1.3.3

/*
 * Copyright (c) 2011, iSENSE Project. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer. Redistributions in binary
 * form must reproduce the above copyright notice, this list of conditions and
 * the following disclaimer in the documentation and/or other materials
 * provided with the distribution. Neither the name of the University of
 * Massachusetts Lowell nor the names of its contributors may be used to
 * endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.Map = (function(_super) {

    __extends(Map, _super);

    function Map(canvas) {
      this.canvas = canvas;
    }

    Map.prototype.start = function() {
      ($('#' + this.canvas)).show();
      return Map.__super__.start.call(this);
    };

    Map.prototype.update = function() {
      var dat, dataPoint, fieldIndex, fields, geo, gmap, group, groupIndex, latlngbounds, line, m, mapOptions, markers, row, rows, tmp, visibleGroups, _i, _len;
      latlngbounds = new google.maps.LatLngBounds();
      markers = Array();
      mapOptions = {
        center: new google.maps.LatLng(0, 0),
        zoom: 8,
        mapTypeId: google.maps.MapTypeId.SATELLITE
      };
      gmap = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
      geo = (function() {
        var _i, _len, _ref, _results;
        _ref = data.fields;
        _results = [];
        for (fieldIndex = _i = 0, _len = _ref.length; _i < _len; fieldIndex = ++_i) {
          fields = _ref[fieldIndex];
          if ((Number(fields.typeID)) === (Number(data.types.GEOSPATIAL))) {
            _results.push(Number(fieldIndex));
          }
        }
        return _results;
      })();
      visibleGroups = (function() {
        var _i, _len, _ref, _results;
        _ref = data.groups;
        _results = [];
        for (groupIndex = _i = 0, _len = _ref.length; _i < _len; groupIndex = ++_i) {
          group = _ref[groupIndex];
          if (__indexOf.call(globals.groupSelection, groupIndex) >= 0) {
            _results.push(group);
          }
        }
        return _results;
      })();
      rows = (function() {
        var _i, _len, _ref, _ref1, _results;
        _ref = data.dataPoints;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          dataPoint = _ref[_i];
          if (_ref1 = (String(dataPoint[data.groupingFieldIndex])).toLowerCase(), __indexOf.call(visibleGroups, _ref1) >= 0) {
            _results.push(line = (function() {
              var _j, _len1, _results1;
              _results1 = [];
              for (fieldIndex = _j = 0, _len1 = dataPoint.length; _j < _len1; fieldIndex = ++_j) {
                dat = dataPoint[fieldIndex];
                if (__indexOf.call(geo, fieldIndex) >= 0) {
                  _results1.push(dat);
                }
              }
              return _results1;
            })());
          }
        }
        return _results;
      })();
      for (_i = 0, _len = rows.length; _i < _len; _i++) {
        row = rows[_i];
        tmp = new google.maps.LatLng(row[0], row[1]);
        m = {
          position: tmp,
          map: gmap
        };
        markers[markers.length] = new google.maps.Marker(m);
        latlngbounds.extend(tmp);
      }
      gmap.fitBounds(latlngbounds);
      return Map.__super__.update.call(this);
    };

    Map.prototype.end = function() {
      return ($('#' + this.canvas)).hide();
    };

    Map.prototype.drawControls = function() {
      Map.__super__.drawControls.call(this);
      return this.drawGroupControls();
    };

    return Map;

  })(BaseVis);

  globals.map = new Map("map_canvas");

}).call(this);
