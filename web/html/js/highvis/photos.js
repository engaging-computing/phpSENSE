// Generated by CoffeeScript 1.3.3

/*
 * Copyright (c) 2011, iSENSE Project. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer. Redistributions in binary
 * form must reproduce the above copyright notice, this list of conditions and
 * the following disclaimer in the documentation and/or other materials
 * provided with the distribution. Neither the name of the University of
 * Massachusetts Lowell nor the names of its contributors may be used to
 * endorse or promote products derived from this software without specific
 * prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.Photos = (function(_super) {

    __extends(Photos, _super);

    function Photos(canvas) {
      this.canvas = canvas;
    }

    Photos.prototype.start = function() {
      ($('#' + this.canvas)).show();
      this.controlWidth = ($('#controldiv')).width();
      ($('#controldiv')).css({
        width: 0
      });
      ($('#controlhider')).hide();
      ($('#' + this.canvas)).css({
        width: ($("#viscontainer")).innerWidth() - ($("#controlhider")).outerWidth()
      });
      return Photos.__super__.start.call(this);
    };

    Photos.prototype.update = function() {
      var i, pic, ses, tmp, _results;
      ($('#' + this.canvas)).html('');
      ($('#' + this.canvas)).append('<div id="photoTable"></div>');
      i = 0;
      _results = [];
      for (ses in data.metaData) {
        if (data.metaData[ses].pictures.length > 0) {
          _results.push((function() {
            var _results1,
              _this = this;
            _results1 = [];
            for (pic in data.metaData[ses].pictures) {
              console.log(pic);
              tmp = data.metaData[ses].pictures[pic];
              _results1.push((function(tmp) {
                var full, thumb;
                thumb = "<img id='pic_" + i + "' class='photoTable_photo' src='" + tmp.provider_url + "'/>";
                full = "<img id='pic_" + i + "' class='photoTable_openPhoto' src='" + tmp.provider_url + "'/>";
                ($('#photoTable')).append(thumb);
                ($('#pic_' + i)).click(function() {
                  ($('#photoTable')).append("<div id='dialog' style='overflow-x:hidden'>" + full + "<div style='float:left'><b>Description: </b>" + tmp.description + "</div></div>");
                  return ($('#dialog')).dialog({
                    modal: true,
                    draggable: false,
                    minWidth: 688,
                    minHeight: 480,
                    resizable: false,
                    title: 'Session: ' + data.metaData[ses].session_id
                  });
                });
                return i++;
              })(tmp));
            }
            return _results1;
          }).call(this));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Photos.prototype.end = function() {
      ($('#' + this.canvas)).hide();
      ($('#controldiv')).css({
        width: this.controlWidth
      });
      return ($('#controlhider')).show();
    };

    Photos.prototype.drawControls = function() {
      return Photos.__super__.drawControls.call(this);
    };

    return Photos;

  })(BaseVis);

  if (__indexOf.call(data.relVis, "Photos") >= 0) {
    globals.photos = new Photos("photos_canvas");
  } else {
    globals.photos = new DisabledVis("photos_canvas");
  }

}).call(this);
